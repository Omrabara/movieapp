{"ast":null,"code":"import _slicedToArray from \"D:\\\\react-tmdb-app-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\react-tmdb-app-master\\\\client\\\\src\\\\components\\\\views\\\\MovieDetail\\\\Sections\\\\Favorite.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Button } from 'antd';\nimport { useSelector } from 'react-redux';\n\nfunction Favorite(props) {\n  const user = useSelector(state => state.user);\n  const movieId = props.movieId;\n  const userFrom = props.userFrom;\n  const movieTitle = props.movieInfo.title;\n  const moviePost = props.movieInfo.backdrop_path;\n  const movieRunTime = props.movieInfo.runtime;\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        FavoriteNumber = _useState2[0],\n        setFavoriteNumber = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        Favorited = _useState4[0],\n        setFavorited = _useState4[1];\n\n  const variables = {\n    movieId: movieId,\n    userFrom: userFrom,\n    movieTitle: movieTitle,\n    moviePost: moviePost,\n    movieRunTime: movieRunTime\n  };\n\n  const onClickFavorite = () => {\n    if (user.userData && !user.userData.isAuth) {\n      return alert('Please Log in first');\n    }\n\n    if (Favorited) {\n      //when we are already subscribed \n      axios.post('/api/favorite/removeFromFavorite', variables).then(response => {\n        if (response.data.success) {\n          setFavoriteNumber(FavoriteNumber - 1);\n          setFavorited(!Favorited);\n        } else {\n          alert('Failed to Remove From Favorite');\n        }\n      });\n    } else {\n      // when we are not subscribed yet\n      axios.post('/api/favorite/addToFavorite', variables).then(response => {\n        if (response.data.success) {\n          setFavoriteNumber(FavoriteNumber + 1);\n          setFavorited(!Favorited);\n        } else {\n          alert('Failed to Add To Favorite');\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    axios.post('/api/favorite/favoriteNumber', variables).then(response => {\n      if (response.data.success) {\n        setFavoriteNumber(response.data.subscribeNumber);\n      } else {\n        alert('Failed to get Favorite Number');\n      }\n    });\n    axios.post('/api/favorite/favorited', variables).then(response => {\n      if (response.data.success) {\n        setFavorited(response.data.subcribed);\n      } else {\n        alert('Failed to get Favorite Information');\n      }\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    onClick: onClickFavorite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \" \", !Favorited ? \"Add to Favorite\" : \"Not Favorite\", \" \", FavoriteNumber));\n}\n\nexport default Favorite;","map":{"version":3,"sources":["D:\\react-tmdb-app-master\\client\\src\\components\\views\\MovieDetail\\Sections\\Favorite.js"],"names":["React","useEffect","useState","axios","Button","useSelector","Favorite","props","user","state","movieId","userFrom","movieTitle","movieInfo","title","moviePost","backdrop_path","movieRunTime","runtime","FavoriteNumber","setFavoriteNumber","Favorited","setFavorited","variables","onClickFavorite","userData","isAuth","alert","post","then","response","data","success","subscribeNumber","subcribed"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { Button } from 'antd';\nimport { useSelector } from 'react-redux';\n\nfunction Favorite(props) {\n    const user = useSelector(state => state.user)\n\n    const movieId = props.movieId\n    const userFrom = props.userFrom\n    const movieTitle = props.movieInfo.title\n    const moviePost = props.movieInfo.backdrop_path\n    const movieRunTime = props.movieInfo.runtime\n\n    const [FavoriteNumber, setFavoriteNumber] = useState(0)\n    const [Favorited, setFavorited] = useState(false)\n    const variables = {\n        movieId: movieId,\n        userFrom: userFrom,\n        movieTitle: movieTitle,\n        moviePost: moviePost,\n        movieRunTime: movieRunTime\n    }\n\n    const onClickFavorite = () => {\n\n        if (user.userData && !user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n\n        if (Favorited) {\n            //when we are already subscribed \n            axios.post('/api/favorite/removeFromFavorite', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        setFavoriteNumber(FavoriteNumber - 1)\n                        setFavorited(!Favorited)\n                    } else {\n                        alert('Failed to Remove From Favorite')\n                    }\n                })\n\n        } else {\n            // when we are not subscribed yet\n\n            axios.post('/api/favorite/addToFavorite', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        setFavoriteNumber(FavoriteNumber + 1)\n                        setFavorited(!Favorited)\n                    } else {\n                        alert('Failed to Add To Favorite')\n                    }\n                })\n        }\n    }\n\n    useEffect(() => {\n\n        axios.post('/api/favorite/favoriteNumber', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setFavoriteNumber(response.data.subscribeNumber)\n                } else {\n                    alert('Failed to get Favorite Number')\n                }\n            })\n\n        axios.post('/api/favorite/favorited', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setFavorited(response.data.subcribed)\n                } else {\n                    alert('Failed to get Favorite Information')\n                }\n            })\n\n    }, [])\n\n\n    return (\n        <>\n            <Button onClick={onClickFavorite} > {!Favorited ? \"Add to Favorite\" : \"Not Favorite\"} {FavoriteNumber}</Button>\n        </>\n    )\n}\n\nexport default Favorite\n\n"]},"metadata":{},"sourceType":"module"}